{"version":3,"sources":["Timer.js","Ticker.js","App.js","serviceWorker.js","index.js"],"names":["Timer","name","value","unit","this","isNsfw","id","v4","src","per","timeUnit","rate","getRateFactor","target","until","Date","Error","getTooltip","timer","Ticker","stagger","Math","random","useState","dateKey","setDateKey","visible","setVisibility","window","setTimeout","rawValue","unitsUntil","x","parts","toString","split","replace","join","prettify","ceil","toPrecision","className","title","href","onChange","isVisible","TIMERS","nsfw","source","App","setTarget","showNsfw","setShowNsfw","packageJson","version","toISOString","onClick","e","filter","t","map","key","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eb9e892d.chunk.js","sourcesContent":["import {v4} from \"uuid\";\n\nexport class Timer {\n    static getRateFactor(per) {\n        switch(per) {\n            case \"millisecond\":\n                return 1;\n            case \"second\":\n                return 1000;\n            case \"minute\":\n                return 60000;\n            case \"hour\":\n                return 3600000;\n            case \"day\":\n                return 86400000;\n            case \"month\":\n                return 2592000000;\n            case \"year\":\n                return 31536000000;\n            default:\n                throw new Error(\"unknown rate unit\");\n        }\n    }\n    source(src) {\n        this.src = src;\n        return this;\n    }\n    per(per) {\n        this.timeUnit = per;\n        this.rate = Timer.getRateFactor(per);\n        return this;\n    }\n    nsfw() {\n        this.isNsfw = true;\n        return this;\n    }\n    \n    unitsUntil(target) {\n        const now = +new Date();\n        const delta_ms = now - target;\n        \n        const until = ((delta_ms * this.value) / this.rate);\n        \n        return until ? until : 0;\n    }\n    \n    constructor(name, value = 1, unit) {\n        this.name = name;\n        this.value = value;\n        this.unit = unit;\n        this.isNsfw = false;\n        this.id = v4();\n    }\n}","import React, {useState} from 'react';\nimport {Ticker as NumberTicker} from \"react-flip-ticker\";\nimport VizSensor from 'react-visibility-sensor';\n\nfunction prettify(x) {\n    var parts = x.toString().split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return parts.join(\".\");\n    \n}\n\nfunction getTooltip(timer) {\n    return `${timer.value}${\" \" + (timer.unit || \"\")}/${timer.timeUnit}`;\n}\nconst UPDATE_TIMEOUT_BASE = 1000;\nconst UPDATE_TIMEOUT_STAGGER = 500;\n\n/**\n * An automatically updating ticker value, generated from a timer element\n */\nexport function Ticker({timer, target}) {\n    const stagger = Math.random()*UPDATE_TIMEOUT_STAGGER;\n    const [dateKey, setDateKey] = useState(0);\n    const [visible, setVisibility] = useState(true);\n    window.setTimeout(\n        () => {\n            if(visible) { setDateKey(dateKey + 1) };\n        },\n        UPDATE_TIMEOUT_BASE+stagger\n    );\n    \n    const rawValue = timer.unitsUntil(target);\n    // ceil when values are >10, use an int (ceil) otherwise use 2sf, since it looks nicer\n    const value = prettify( rawValue > 10 ? Math.ceil(rawValue) : rawValue.toPrecision(2) );\n    return ( \n        <div className={`ticker ${timer.isNsfw ? \"ticker--nsfw\" : \"\"}`}>\n            <div title={getTooltip(timer)} className=\"ticker__name\">\n               {timer.src ? <a className=\"timer__src\" href={timer.src}>{timer.name}</a> : timer.name} \n            </div>\n            <div className=\"ticker__value_container\">\n                <VizSensor onChange={(isVisible) => { setVisibility(isVisible)}}>\n                    <div className=\"ticker__value\">\n                        <NumberTicker>\n                            {value}\n                        </NumberTicker>\n                    </div>\n                </VizSensor>\n                <div className=\"ticker__unit\">{timer.unit}</div>\n            </div>\n        </div>\n    )\n}","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, {useState} from 'react';\nimport {Timer} from \"./Timer\";\nimport {Ticker} from \"./Ticker\";\nimport './App.css';\n\nimport packageJson from '../package.json';\n\n\nconst TIMERS = [\n    new Timer(\"Seconds ⌚\").per(\"second\"),\n    new Timer(\"Minutes ⌚\").per(\"minute\"),\n    new Timer(\"Hours ⌚\").per(\"hour\"),\n    new Timer(\"Days 📆\").per(\"day\"),\n    new Timer(\"Minimum Wage Pay 💰\", 6.71, \"GBP\").per(\"hour\"),\n    new Timer(\"Galactic Years 🌌\", 4e-9).per(\"year\"),\n    new Timer(\"Global Births 👶\", 131400000).per(\"year\"),\n    new Timer(\"Global Deaths 💀\", 55300000).per(\"year\").nsfw(),\n    new Timer(\"Olympic Swimming Pools full of human Skulls 🏊‍♂️\", 134.643334).per(\"year\").nsfw(),\n    new Timer(\"Avg. Human Lifetime 💯\", 1.219512195, \"%\").per(\"year\"),\n    new Timer(\"Rainforest Destroyed 🌴\", 1.55000, \"sq. mi\").per(\"year\"),\n    new Timer(\"Tons of CO₂ Released 🌍\", 38200000000).per(\"year\"),\n    new Timer(\"Apple's Global Revenue 🍏\", 163200000000, \"GBP\").per(\"year\"),\n    new Timer(\"Miles driven @ 70mph 🚗\", 70, \"mi\").per(\"hour\"),\n    new Timer(\"Drives to the moon 🌝\", 0.00029306451).per(\"hour\"),\n    new Timer(\"Blood Pumped @ 60bpm 🩸\", 4.2, \"litres\").per(\"minute\"),\n    new Timer(\"Earth Rotation 🌐\", 1674.4, \"km\").per(\"hour\").source(\"https://books.google.co.uk/books?id=w8PK2XFLLH8C&pg=PA244&redir_esc=y#v=onepage&q&f=false\"),\n    new Timer(\"Earth Orbits 🚀\", 940000000, \"km\").per(\"year\"),\n    new Timer(\"Tweets 🐦\", 500000000).per(\"day\").source(\"https://blog.twitter.com/engineering/en_us/a/2013/new-tweets-per-second-record-and-how.html\"),\n    new Timer(\"Internet Traffic 👩‍💻\", 34068, \"GB\").per(\"second\"),\n    new Timer(\"Google Searches 🔎\", 53640).per(\"second\"),\n    new Timer(\"Global Emails 💌\", 2479545, \"emails\").per(\"second\"),\n    new Timer(\"Poop 💩\", 430.9128, \"g\").per(\"day\").nsfw(),\n    new Timer(\"Urine 🚽\", 1600, \"ml\").per(\"day\").nsfw(),\n    new Timer(\"Semen 💦\", 63645.3, \"ml\").per(\"year\").nsfw(),\n    new Timer(\"Vending Machine Deaths 🥛\", 10, \"💀\").per(\"year\").nsfw(),\n    new Timer(\"Individual UK energy use ⚡\", 2089, \"MW\").per(\"hour\"),\n    new Timer(\"Individual UK energy use ⚡\", 81291, \"Pork Pies\").per(\"hour\"),\n    new Timer(\"Oil Pumped 🛢\", 930000000, \"barrels\").per(\"day\"),\n    new Timer(\"Cars Produced 🚘\", 960000000).per(\"year\"),\n    new Timer(\"Cow Farts 🐄💨\", 30, \"balloons\").per(\"day\"),\n    new Timer(\"Bullets Manufactured 🔫\", 12000000000).per(\"year\"),\n    new Timer(\"Deaths Choking on ballpoint pens 🖊\", 100, \"💀\").per(\"year\").nsfw(),\n    new Timer(\"Miles driven by average person\", 13476, \"mi\").per(\"year\").source(\"https://www.fhwa.dot.gov/ohim/onh00/bar8.htm\"),\n    new Timer(\"Percentage Use of your next flat tire @ 70mph\", 0.0672, \"%\").per(\"day\"),\n    new Timer(\"Flat Tires (US)\", 220000000, \"tyres\").per(\"year\").source(\"http://excelmathmike.blogspot.com/2011/04/phooey-on-flats-part-i.html\")\n];\n\n\nfunction App() {\n    const [target, setTarget] = useState(+new Date());\n    const [showNsfw, setShowNsfw] = useState(false);\n    \n    return (\n        <div className=\"container\">\n          <div className=\"header\">\n            <h1>Since you arrived <sup><code>v{packageJson.version}</code></sup></h1>\n            <p>From the moment you got here, things have been happening. Take a look!</p>\n          </div>\n          <div className=\"content\">\n            <div className=\"controls\">\n              <div>\n                You arrived at: \n              <code className=\"controls__date\">{new Date(target).toISOString()}</code>\n              </div>\n              <div>\n                <button onClick={() => setTarget(+new Date())}>❎ Reset</button>\n                <button onClick={(e) =>setShowNsfw(!showNsfw)}>{showNsfw ? \"❌ Hide\" : \"🔞 Show\"} NSFW</button>\n              </div>\n            </div>\n\n            <div className=\"tickers\">\n              {TIMERS.filter((t) => t.isNsfw ? showNsfw : true).map(t => <Ticker key={t.id} timer={t} target={target} />)}\n            </div>\n          </div>\n          <div className=\"footer\">\n            Got something to add? Send us a PR! <a href=\"https://github.com/jerometwell/sinceyougothere\">GitHub</a>\n          </div>\n        </div>\n    )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}